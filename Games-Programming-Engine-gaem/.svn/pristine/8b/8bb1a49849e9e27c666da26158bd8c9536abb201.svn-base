#ifndef ENGINE_H
#define ENGINE_H

#include <iostream>
#include <string>

#include <glew\GL\glew.h>
#include <SFML\Graphics.hpp>
#include <SFML\OpenGL.hpp>
#include <glm\glm.hpp>
#include <glm\gtc\type_ptr.hpp>

#include "core\assetLoader.h"
#include "core\eventSystem.h"
#include "core\sceneManager.h"
#include "core\objectManager.h"
#include "rendering\renderSystem.h"

#include "core\input.h"
#include "rendering\camera.h"
#include "rendering\modelRenderer.h"


class Engine
{
public:
	Engine(){};
	~Engine(){};

	sf::RenderWindow* startEditorMode(HWND windowHandle);
	sf::RenderWindow* startGameMode();
	void startup(); //!< Initalize everything needed to run the engine
	void onKeyEvent(int key, KeyEvent::State action);
	void mainLoop(); //!< Update all sub systems here!
	void shutDown(); //!< Anything that needs to be stopped elegantly or in certain order, put here

	//sf::Vector2i getScreenSize();

private:
	// Core Engine
	sf::RenderWindow _window;
	AssetLoader _assetLoader;
	SceneManager _sceneMngr;
	ObjectManager _objMngr;
	Input* _input;
	
	// Sub Systems
	RenderSystem _rendSys;
	BehaviourSystem _behvrSys;

	// Engine Vars
	sf::Vector2u _screenSize;

	// Time
	sf::Clock _clock;
	float _refreshRate;
	float _dt; //!< Delta Time
	float _fdt; //!< Fixed delta time
};



#endif