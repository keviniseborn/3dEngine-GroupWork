#include "editor\goMenu.h"
#include <iostream>

void GoMenu::initialize(HINSTANCE hInstance, HWND handle)
{
	_hInstance = hInstance;
	_menuHandle = handle;

	ShowWindow(_menuHandle, SW_SHOWNORMAL);
	UpdateWindow(_menuHandle);
}

LRESULT GoMenu::processMsg(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
	int wmId, wmEvent;

	switch (message)
	{
	case WM_CREATE:
		myCreateStatic(hWnd, ID_STATIC, L"Fancy a bum?", 2, 20, 80, 30);
		createButton(hWnd);
		break;

		case WM_COMMAND:
		wmId    = LOWORD(wParam); // the low word of wparam is the ID of the command
		wmEvent = HIWORD(wParam);
		// Parse the menu selections:
		switch (wmId)
		{
		case ID_BUTTON:
			std::cout << "Hello!\n";
			break;
		default:
			return DefWindowProc(hWnd, message, wParam, lParam);
		}
		
	default:
		return DefWindowProc(hWnd, message, wParam, lParam);

	}
    
    return DefWindowProc(hWnd, message, wParam, lParam);
}



void GoMenu::show()
{
	ShowWindow(_menuHandle, SW_SHOWNORMAL);
	BringWindowToTop(_menuHandle);
}








HWND GoMenu::myCreateStatic(HWND hwnd, int id, LPCWSTR s, int x, int y, int width, int height)
// Creates a static text box.
// hwnd is the window within which the box appears,
// id is a user-provided ID number,
// x,y = position on screen,
// width, height = width and height of the box.
{  
	HWND h;

	h = CreateWindowEx(WS_EX_STATICEDGE, L"STATIC", 
		s,
		WS_CHILDWINDOW | WS_VISIBLE | SS_LEFT | SS_NOPREFIX,
		x,y,width,height,
		hwnd, 
		(HMENU) id, 
		GetModuleHandle(NULL), NULL);

	if (h) // successful creation
	{  HFONT hfDefault;
		hfDefault = (HFONT) GetStockObject(DEFAULT_GUI_FONT);
		SendMessage(h, WM_SETFONT, (WPARAM)hfDefault, MAKELPARAM(FALSE, 0));
	}
	else
		MessageBox(hwnd, L"MyCreateStatic could not create static text.", 
					L"Error", MB_OK | MB_ICONERROR);

	return h;
}


HWND GoMenu::createButton(HWND parentHandle)
{
	HWND hWndButton=CreateWindowEx(NULL, 
		L"BUTTON",
		L"OK",
		WS_TABSTOP|WS_VISIBLE|WS_CHILD|BS_DEFPUSHBUTTON,
		2,
		60,
		80,
		30,
		parentHandle,
		(HMENU)ID_BUTTON,
		GetModuleHandle(NULL),
		NULL);

	return hWndButton;
}